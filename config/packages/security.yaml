security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        # Pour les admins (backoffice)
        app_user_provider:
            entity:
                class: App\Users\Domain\Entity\User
                property: email

        # Pour les clients (frontend)
        app_customer_provider:
            entity:
                class: App\Customers\Domain\Entity\Customer
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

          # Firewall pour l'inscription publique
        customer_register:
            pattern: ^/api/customers
            stateless: true
            provider: app_customer_provider
            # pas de jwt → route publique

        # Firewall pour gérer le login via le LoginController
        customer_login:
            pattern: ^/api/login_check
            stateless: true
            provider: app_customer_provider
            json_login:
                check_path: /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
          
       


        # Frontend API (JWT protégé)
        api:
            pattern: ^/api
            stateless: true
            provider: app_customer_provider
            jwt: ~

        # Backoffice / pages classiques
        main:
            lazy: true
            provider: app_user_provider
            pattern: ^/
            anonymous: true # Permet l'accès à /verify/... sans login
            custom_authenticator: App\Users\Infrastructure\Security\LoginAuthenticator
            logout:
                path: app_logout
                target: app_login
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /

    access_control:
    
    # Accès public (frontend)
  
    - { path: ^/LiveEvents/Login, roles: PUBLIC_ACCESS }
    - { path: ^/LiveEvents/Register, roles: PUBLIC_ACCESS }
    - { path: ^/api/login_check, roles: PUBLIC_ACCESS }
    - { path: ^/api/register, roles: PUBLIC_ACCESS }
    - { path: ^/api/customers, roles: PUBLIC_ACCESS }
    - { path: ^/api/verify/email, roles: PUBLIC_ACCESS }

    # Routes API publiques
    - { path: ^/api/concerts, roles: PUBLIC_ACCESS }
    - { path: ^/api/markers, roles: PUBLIC_ACCESS }
    - { path: ^/api/alerts, roles: PUBLIC_ACCESS }
    - { path: ^/api/sponsors, roles: PUBLIC_ACCESS }

   
    # Accès API protégée (JWT)
   
    # Routes nécessitant authentification
    
    - { path: ^/api/orders, roles: IS_AUTHENTICATED_FULLY }
   

    
    # Backoffice / pages protégées
    
    - { path: ^/concert/filtered, roles: ROLE_USER }
    - { path: ^/concert/, roles: ROLE_USER }
    - { path: ^/concert/edit, roles: ROLE_ADMIN }
    - { path: ^/concert/delete, roles: ROLE_ADMIN }
    - { path: ^/contact, roles: ROLE_ADMIN }
    - { path: ^/alert/, roles: ROLE_ADMIN }
    - { path: ^/marker/, roles: ROLE_ADMIN }
    - { path: ^/sponsor/, roles: ROLE_ADMIN }
    - { path: ^/customer/, roles: ROLE_ADMIN }
